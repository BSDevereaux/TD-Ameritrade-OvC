import yfinance as yf
from datetime import timedelta
from datetime import datetime


today = datetime.date(datetime.now())
a_year_ago = datetime.date(datetime.now()) - timedelta(days = 365)


tickers = ['TLRY']

def dload(ticker):
    howmany = 0
    data = yf.download(ticker, a_year_ago, today, rounding = True)
    data = data.sort_values(['Date'] , ascending=[False])
    j = 4
    i = 1

    
    for i in range(1):
        mopen = data.iloc[j]['Open']
        #print(mopen)
        fclose = data.iloc[j-4]['Adj Close']
        #print('close is ' + str(fclose))
        #print(data)

        j += 4
  
        if fclose > mopen:
            answer = fclose - mopen
            answer = answer / mopen
            answer = answer * 100
            #print(answer)
            if answer > 2:
                #print(mopen)
                #print(fclose)
                howmany += 1
    
    for i in range(1):
        mopen = data.iloc[j]['Open']
        #print(mopen)
        fclose = data.iloc[j-3]['Adj Close']
        
        #print('close is ' + str(fclose))
        #print(data)
        
        j += 5
        
        if fclose > mopen:
            answer = fclose - mopen
            answer = answer / mopen
            answer = answer * 100
            #print(answer)
            if answer > 2:
                #print(mopen)
                #print(fclose)
                howmany += 1
    
    for i in range(3):
         mopen = data.iloc[j]['Open']
         #print(mopen)
         fclose = data.iloc[j-4]['Adj Close']
         #print('close is ' + str(fclose))
         #print(data)
    
         j += 5
      
         if fclose > mopen:
             answer = fclose - mopen
             answer = answer / mopen
             answer = answer * 100
             #print(answer)
             if answer > 2:
                 #print(mopen)
                 #print(fclose)
                 howmany += 1
    
    for i in range(2):
         mopen = data.iloc[j]['Open']
         #print(mopen)
         fclose = data.iloc[j-4]['Adj Close']
         #print('close is ' + str(fclose))
         #print(data)
    
         j += 5
      
         if fclose > mopen:
             answer = fclose - mopen
             answer = answer / mopen
             answer = answer * 100
             #print(answer)
             if answer > 2:
                 #print(mopen)
                 #print(fclose)
                 howmany += 1   
                 
    for i in range(1):
         mopen = data.iloc[j-1]['Open']
         #print(mopen)
         fclose = data.iloc[j-4]['Adj Close']
         #print('close is ' + str(fclose))
         #print(data)
    
         j += 4
      
         if fclose > mopen:
             answer = fclose - mopen
             answer = answer / mopen
             answer = answer * 100
             #print(answer)
             if answer > 2:
                 #print(mopen)
                 #print(fclose)
                 howmany += 1  
                 
    for i in range(3):
         mopen = data.iloc[j]['Open']
         #print(mopen)
         fclose = data.iloc[j-4]['Adj Close']
         #print('close is ' + str(fclose))
         #print(data)
    
         j += 5
      
         if fclose > mopen:
             answer = fclose - mopen
             answer = answer / mopen
             answer = answer * 100
             #print(answer)
             if answer > 2:
                 #print(mopen)
                 #print(fclose)
                 howmany += 1

    for i in range(1):
         mopen = data.iloc[j-1]['Open']
         #print(mopen)
         fclose = data.iloc[j-4]['Adj Close']
         #print('close is ' + str(fclose))
         #print(data)
    
         j += 4
      
         if fclose > mopen:
             answer = fclose - mopen
             answer = answer / mopen
             answer = answer * 100
             #print(answer)
             if answer > 2:
                 #print(mopen)
                 #print(fclose)
                 howmany += 1  

    for i in range(1):
         mopen = data.iloc[j]['Open']
         #print(mopen)
         fclose = data.iloc[j-4]['Adj Close']
         #print('close is ' + str(fclose))
         #print(data)
    
         j += 5
      
         if fclose > mopen:
             answer = fclose - mopen
             answer = answer / mopen
             answer = answer * 100
             #print(answer)
             if answer > 2:
                 #print(mopen)
                 #print(fclose)
                 howmany += 1  

    
    print(ticker + ' ' + str(howmany) + ' / 12')

for ticker in tickers:
    dload(ticker)
